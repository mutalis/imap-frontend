npm list -g --depth=0

https://github.com/typings/typings

npm install typings -g


# Search for definitions.
typings search react

# Find a definition by name.
typings search --name react

# If you use the package as a module:
# Install non-global typings (defaults to "npm" source, configurable through `defaultSource` in `.typingsrc`).
typings install debug --save



typings search --name react-bootstrap

typings search bootstrap


typings install react-bootstrap --save

typings install react-bootstrap=github:react-bootstrap/react-bootstrap-typescript/index.d.ts --save




npm install whatwg-fetch --save

https://www.npmjs.com/~types

https://www.npmjs.com/package/@types/whatwg-fetch

npm install --save @types/whatwg-fetch

npm uninstall @types/whatwg-fetch

npm i --save @types/promise


npm install --save isomorphic-fetch es6-promise





==========
Problem:

const foo = { a: "one", b: "two" };

for (const key in foo) {
  console.log(foo[key]); // Error: foo has no index signature
}


== Fix:

interface ISomeObject {
    [key: string]: string;
}

let foo: ISomeObject = {
    a: "one",
    b: "two"
};

for (let key in foo) {
    console.log(foo[key]); 
}

==========

axios.get(url)
      .then((response:AxiosResponse) => {
        let emails:Array<IEmailBoxState> = [];
        //const emailsHash:ISomeHash = { a: "one", b: "two" };

        const emailsHash:ISomeHash = response.data;
        for (let key in emailsHash) {
          const email = emailsHash[key];
          console.log(email);
          const nel = [ {key: email.id, username: email.username, quota: email.quota}];
          let otro:Array<IEmailBoxState> = [nel,nel];

          emails.concat([{key: email.id, username: email.username, quota: email.quota}]);
          emails.concat(nel);
          
        }
      })
      